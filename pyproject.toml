[project]
name = "MDALL"
version = "0.0.1"
description = "Personal exploration of open data"
authors = [{ name = "Caroline Mimeault", email = "carolinemimeault@gmail.com" }]
dependencies = [
    "pg8000>=1.31.1",
    "ijson>=3.2.3",
    "uvicorn>=0.29.0",
    "fastapi>=0.110.2",
    "httpx>=0.27.0",
]
requires-python = ">=3.11"
license = { text = "MIT" }
[tool.pdm]
[tool.pdm.dev-dependencies]
test = ["pytest>=8.1.1"]

[tool.pdm.scripts]
_.env_file = ".env"
companies = "python scripts/companies.py"
licences = "python scripts/licences.py"
devices = "python scripts/devices.py"
licencetypes = "python scripts/licence_types.py"
all = { composite = ["companies", "licences", "devices", "licencetypes"] }
create = { shell = "docker run -d -e POSTGRES_USER=$DATABASE_USER -e POSTGRES_PASSWORD=$DATABASE_PASSWORD --network=host postgres:14.11" }
connect = { shell = "psql --host=localhost --username=$DATABASE_USER --dbname=$DATABASE --password" }
destroy = { shell = "docker stop $(docker ps -q)" }
dbdump = { shell = "pg_dump -s -F p -E UTF-8 --host=localhost --username=$DATABASE_USER --dbname=$DATABASE --password" }
# newmigration example: pdm newmigration test
newmigration = "migrate create -ext sql -dir migrations -seq"
migrateup = { shell = "migrate -database $DATABASE_URL -path migrations up" }
migratedown = { shell = "migrate -database $DATABASE_URL -path migrations down 1" }
# syntax to import a python module system (app.main:app instead of the file path app/main:app)
server = "uvicorn app.main:app --reload"
test = "pytest"
[build-system]
requires = ["pdm-pep517>=1.0.0"]
build-backend = "pdm.pep517.api"
